import telebot
from utils import (finder, replace_text, replace_first_word, replace_last_word,
                   replace_first_word_amount, replace_last_word_amount)
from telebot import types
import requests
import sqlite3
from text_to_speech import text_to_speech, speech_to_text
from text_recognition import text_recognition
from wiki import search_wiki, page_wiki


token = '7531354776:AAHStSiRCE65LYDgNv65kOFRjDphEsEWWKs'
bot = telebot.TeleBot(token)

text = '' # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫
word = '' # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å
text_file = '' # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Ç–µ–∫—Å—Ç–∞ —Ç–µ–∫—Å—Ç/—Ñ–∞–π–ª/–∫–∞—Ä—Ç–∏–Ω–∫–∞

name = '' # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

lang = ''# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —è–∑—ã–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞

replace_word = ''# –°–ª–æ–≤–æ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –≤ –∑–∞–º–µ–Ω–µ
find_word = ''# –°–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å
all_or_one = '' # –í—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –∏–ª–∏ —Ç–æ–ª—å–∫–æ 1
another_amount = '' # –¥—Ä—É–≥–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å
start_or_finish = '' # –∏—Å–∫–∞—Ç—å —Å –∫–æ–Ω—Ü–∞ –∏–ª–∏ —Å–Ω–∞—á–∞–ª–∞

red = False # –ó–∞–º–µ–Ω–∏—Ç—å —Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç–µ –∏–ª–∏ –Ω–µ—Ç

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∏—Å–∫–∞
regist = False # –†–µ–≥–∏—Å—Ç—Ä
accurate_search = False # –ù–µ—Ç–æ—á–Ω—ã–π –ø–æ–∏—Å–∫
many_files = False # –ü–æ–∏—Å–∫ –≤–æ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–∞—Ö
edit_text = False # –°—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫

message_id = {} # –ê–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è

all_texts = [] # –°–ø–∏—Å–æ–∫ —Å–æ –≤—Å–µ–º–∏ —Ä–∞–Ω–µ–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ —Ç–µ–∫—Å—Ç–∞–º–º

reg_log_user = True # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –∏–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä—É–µ—Ç—Å—è

isauthenticated = False # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω

default_balance = 5 # –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

topup_balance = 0 # —Å—É–º–º–∞ –ø–æ–ø–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞

author_name = '–ï–≤–≥–µ–Ω–∏–π' # –ò–º—è –∞–≤—Ç–æ—Ä–∞ –∏ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è

now_balance = 0 # –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å

"""
–ù–∞—á–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
"""
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èüë§")
    item2 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É")
    markup.add(item2)
    markup.add(item1)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)
    bot.register_next_step_handler(message, user_start)

"""
–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""
def user_start(message):
    if message.text == '–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É':
        main(message)
    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èüë§':
        reg_log(message)

"""
–°–ø–∏—Å–æ–∫ –≥–ª–∞–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞
"""
@bot.message_handler(commands=['work'])
def main(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è")
    item2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ")
    item3 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥—Åüîä")
    item5 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—ÉüñºÔ∏è")
    item6 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∏—Å–∫üîé")
    item7 = types.KeyboardButton("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")
    item8 = types.KeyboardButton("–ù–∞–∑–∞–¥‚Ü™Ô∏è")
    markup.add(item1)
    markup.add(item2)
    markup.add(item3)
    markup.add(item5)
    markup.add(item6)
    markup.add(item7)
    markup.add(item8)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç', reply_markup=markup)
    bot.register_next_step_handler(message, variant)


"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
"""
@bot.message_handler(commands=['search'])
def search(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–£—á–∏—Ç—ã–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä")
    item2 = types.KeyboardButton("–ù–µ—Ç–æ—á–Ω—ã–π –ø–æ–∏—Å–∫")
    item3 = types.KeyboardButton("–ü–æ–∏—Å–∫ –≤–æ –≤—Å–µ—Ö —Ä–∞–Ω–µ–µ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–∞—Ö")
    item4 = types.KeyboardButton("–ù–∞—Ö–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞ —Å –æ—à–∏–±–∫–æ–π")
    item5 = types.KeyboardButton("–ù–∞–∑–∞–¥‚Ü™Ô∏è")
    markup.add(item1, item3)
    markup.add(item2, item4)
    markup.add(item5)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏')
    if regist == True:
        message1 = '–£—á–∏—Ç—ã–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä: ‚úÖ'
    else:
        message1 = '–£—á–∏—Ç—ã–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä: ‚ùå'
    if accurate_search == True:
        message2 = '–ù–µ—Ç–æ—á–Ω—ã–π –ø–æ–∏—Å–∫: ‚úÖ'
    else:
        message2 = '–ù–µ—Ç–æ—á–Ω—ã–π –ø–æ–∏—Å–∫: ‚ùå'
    if many_files == True:
        message3 = '–ü–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º —Ñ–∞–π–ª–∞–º: ‚úÖ'
    else:
        message3 = '–ü–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º —Ñ–∞–π–ª–∞–º: ‚ùå'
    if edit_text == True:
        message4 = '–ù–∞—Ö–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞ —Å –æ—à–∏–±–∫–æ–π: ‚úÖ'
    else:
        message4 = '–ù–∞—Ö–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞ —Å –æ—à–∏–±–∫–æ–π: ‚ùå'

    bot.send_message(message.chat.id, f'–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞: \n\n {message1} \n\n {message2}\n\n'
                                      f' {message3} \n\n {message4}', reply_markup=markup)

    bot.register_next_step_handler(message, edit_search)

def edit_search(message):
    global regist
    global accurate_search
    global many_files
    global edit_text

    if message.text == '–£—á–∏—Ç—ã–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä':
        if regist == True:
            regist = False
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è")
            item2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ")
            item3 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∏—Å–∫üîé")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', reply_markup=markup)
            bot.register_next_step_handler(message, variant)

        else:
            regist = True
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è")
            item2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ")
            item3 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∏—Å–∫üîé")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', reply_markup=markup)
            bot.register_next_step_handler(message, variant)
    elif message.text == '–ù–µ—Ç–æ—á–Ω—ã–π –ø–æ–∏—Å–∫':
        if accurate_search == True:
            accurate_search = False
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è")
            item2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ")
            item3 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∏—Å–∫üîé")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', reply_markup=markup)
            bot.register_next_step_handler(message, variant)
        else:
            accurate_search = True
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è")
            item2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ")
            item3 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∏—Å–∫üîé")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', reply_markup=markup)
            bot.register_next_step_handler(message, variant)
    elif message.text == '–ü–æ–∏—Å–∫ –≤–æ –≤—Å–µ—Ö —Ä–∞–Ω–µ–µ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–∞—Ö':
        if many_files == True:
            many_files = False
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è")
            item2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ")
            item3 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∏—Å–∫üîé")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', reply_markup=markup)
            bot.register_next_step_handler(message, variant)
        else:
            many_files = True
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è")
            item2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ")
            item3 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∏—Å–∫üîé")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', reply_markup=markup)
            bot.register_next_step_handler(message, variant)
    elif message.text == '–ù–∞—Ö–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞ —Å –æ—à–∏–±–∫–æ–π':
        if edit_text == True:
            edit_text = False
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è")
            item2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ")
            item3 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∏—Å–∫üîé")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', reply_markup=markup)
            bot.register_next_step_handler(message, variant)
        else:
            edit_text = True
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è")
            item2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ")
            item3 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∏—Å–∫üîé")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', reply_markup=markup)
            bot.register_next_step_handler(message, variant)
    elif message.text == '–ù–∞–∑–∞–¥‚Ü™Ô∏è':
        main(message)


def reg_log(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    item2 = types.KeyboardButton("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
    markup.add(item1)
    markup.add(item2)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=markup)
    bot.register_next_step_handler(message, adduser)

@bot.message_handler(commands=['adduser'])
def adduser(message):
    global reg_log_user
    if message.text == '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è':
        reg_log_user = True
    elif message.text == '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è':
        reg_log_user = False
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ù–∞–∑–∞–¥‚Ü™Ô∏è")
    markup.add(item1)

    conn = sqlite3.connect('database.sql')
    cur = conn.cursor()

    cur.execute("""CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        login TEXT NOT NULL UNIQUE,
        password TEXT NOT NULL,
        balance FLOAT NOT NULL
    )""")

    conn.commit()
    cur.close()
    conn.close()

    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è", reply_markup=markup)
    bot.register_next_step_handler(message, username)


def username(message):
    global name
    if message.text != '–ù–∞–∑–∞–¥‚Ü™Ô∏è':
        name = message.text.strip()
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")
        bot.register_next_step_handler(message, userpass)
    else:
        start(message)

def check_name(name):
    conn = sqlite3.connect('database.sql')
    cur = conn.cursor()
    cur.execute("SELECT * FROM users WHERE login = ?", (name, ))
    user = cur.fetchone()
    conn.close()
    return user

def check_name_login(name, password):
    conn = sqlite3.connect('database.sql')
    cur = conn.cursor()
    cur.execute("SELECT * FROM users WHERE login = ? AND password = ?", (name, password))
    user = cur.fetchone()
    conn.close()
    return user

def userpass(message):
    global isauthenticated
    password = message.text.strip()

    if reg_log_user == True:
        if check_name(name):

            bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:

            conn = sqlite3.connect('database.sql')
            cur = conn.cursor()

            cur.execute('INSERT INTO users (login, password, balance) VALUES (?, ?, ?)', (name, password, default_balance))
            conn.commit()
            cur.close()
            conn.close()

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
            item2 = types.KeyboardButton('–ù–∞–∑–∞–¥')
            markup.add(item1)
            markup.add(item2)
            bot.send_message(message.chat.id, '–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã', reply_markup=markup)
            isauthenticated = True
            bot.register_next_step_handler(message, callback)
    elif reg_log_user == False:
        if check_name_login(name, password):
            bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å")
            isauthenticated = True
            bot.register_next_step_handler(message, callback)

        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
            bot.register_next_step_handler(message, callback)


def callback(message):
    if message.text == '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
        conn = sqlite3.connect('database.sql')
        cur = conn.cursor()

        cur.execute('SELECT * FROM users')
        users = cur.fetchall()

        info = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n'
        amount = 0
        for i in users:
            info += f'–ò–º—è: {i[1]}\n'
            amount += 1
        info += f'–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {amount}'

        cur.close()
        conn.close()

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èüë§")
        item2 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É")
        markup.add(item2)
        markup.add(item1)

        bot.send_message(message.chat.id,  info, reply_markup=markup)

        bot.register_next_step_handler(message, user_start)
    else:
        start(message)

@bot.message_handler(commands=['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'])
def variant(message):
    global text_file
    global text
    if message.text == '–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è':
        text = ''
        text_file = '–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–ù–∞–∑–∞–¥‚Ü™Ô∏è")
        markup.add(item1)
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫',
                         reply_markup=markup)
        bot.register_next_step_handler(message, reverse)

    elif message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ':
        text = ''
        text_file = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ'
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫',
                         reply_markup=telebot.types.ReplyKeyboardRemove())
    elif message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥—Åüîä':
        text = ''
        text_file = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥—Åüîä'
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥—Å –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫',
                         reply_markup=telebot.types.ReplyKeyboardRemove())
    elif message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—ÉüñºÔ∏è':
        text = ''
        text_file = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—ÉüñºÔ∏è'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–ù–∞–∑–∞–¥‚Ü™Ô∏è")
        markup.add(item1)
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫',
                         reply_markup=telebot.types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, handle_photo)
    elif message.text == "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–∏—Å–∫üîé":
        search(message)
    elif message.text == "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏":
        possibilites(message)
    elif message.text == "–ù–∞–∑–∞–¥‚Ü™Ô∏è":
        start(message)
    elif text_file == '–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è':
        text = ''
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫',
                         reply_markup=telebot.types.ReplyKeyboardRemove())
    elif text_file == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ':
        text = ''
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫',
                         reply_markup=telebot.types.ReplyKeyboardRemove())

def reverse(message):
    if message.text == '–ù–∞–∑–∞–¥‚Ü™Ô∏è':
        main(message)
    else:
        func_text(message)

@bot.message_handler(content_types='text')
def func_text(message):
    global word
    global text
    global text_file
    if red == False:
        if text_file == '–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è':
            if text == '':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')
                markup.add(item1)
                text = message.text
                all_texts.append(text + '\n')
                msg = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏', reply_markup=markup)
                message_id[message.chat.id] = msg.message_id
                bot.register_next_step_handler(message, edit)

            else:
                word = message.text
            if word != '':
                res = finder(text, word, regist, accurate_search, edit_text, all_texts, many_files)
                if res != []:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                    markup.add(item1)
                    amount = len(res)
                    finish_res = [str(res[i - 1])   for i in range(1, len(res) + 1)]
                    bot.send_message(message.chat.id, f'–í–æ—Ç —á—Ç–æ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏: \n {'\n'.join(finish_res)}'
                                                      f' \n –ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {amount}', reply_markup=markup)
                    text = ''
                    word = ''
                    bot.register_next_step_handler(message, edit)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                    markup.add(item1)
                    bot.send_message(message.chat.id, '–í —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞', reply_markup=markup)
                    text = ''
                    word = ''
                    bot.register_next_step_handler(message, edit)

        if text_file == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ':
            word = message.text
            res = finder(text, word, regist, accurate_search, edit_text, all_texts, many_files)
            if res != []:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                markup.add(item1)
                amount = len(res)
                finish_res = [str(res[i - 1]) for i in range(1, len(res) + 1)]
                bot.send_message(message.chat.id, f'–í–æ—Ç —á—Ç–æ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏: \n {'\n'.join(finish_res)}'
                                                  f' \n –ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {amount}', reply_markup=markup)
                text = ''
                word = ''
                bot.register_next_step_handler(message, edit)


            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                markup.add(item1)
                bot.send_message(message.chat.id, '–í —Ñ–∞–π–ª–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞', reply_markup=markup)
                text = ''
                word = ''
                bot.register_next_step_handler(message, edit)

        if text_file == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—ÉüñºÔ∏è':
            word = message.text
            res = finder(text, word, regist, accurate_search, edit_text, all_texts, many_files)
            if res != []:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                markup.add(item1)
                amount = len(res)
                finish_res = [str(res[i - 1]) for i in range(1, len(res) + 1)]
                bot.send_message(message.chat.id, f'–í–æ—Ç —á—Ç–æ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏: \n {'\n'.join(finish_res)} \n'
                                                  f' –ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {amount}', reply_markup=markup)
                text = ''
                word = ''
                bot.register_next_step_handler(message, edit)


            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                markup.add(item1)
                bot.send_message(message.chat.id, '–í –∫–∞—Ä—Ç–∏–Ω–∫–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞', reply_markup=markup)
                text = ''
                word = ''
                bot.register_next_step_handler(message, edit)

def edit(message):
    if message.text == "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å":
        variant(message)
    elif message.text == "–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ":
        start(message)
    else:
        func_text(message)

@bot.message_handler(commands=['speech'])
def possibilites(message):
    global isauthenticated
    global now_balance
    if isauthenticated == True:
        now_balance = user_balance(name)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ –≥—Åüîä')
        item2 = types.KeyboardButton('–ó–∞–º–µ–Ω–∏—Ç—å —Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç–µ')
        item4 = types.KeyboardButton('–í–∏–∫–∏–ø–µ–¥–∏—è')
        item5 = types.KeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
        item6 = types.KeyboardButton('–ù–∞–∑–∞–¥‚Ü™Ô∏è')
        markup.add(item1)
        markup.add(item2)
        markup.add(item4)
        markup.add(item5)
        markup.add(item6)
        bot.send_message(message.chat.id, f'–í–∞—à –±–∞–ª–∞–Ω—Å: {now_balance}—Ä\n\n–ö–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å—Ç–æ–∏—Ç 1—Ä')
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ', reply_markup=markup)
        bot.register_next_step_handler(message, lang_var)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è')
        markup.add(item1)
        bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è", reply_markup=markup)
        bot.register_next_step_handler(message, reg_log)

def lang_var(message):
    global now_balance
    global red
    now_balance = user_balance(name)
    if message.text == '–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ –≥—Åüîä':
        if now_balance >= 1:
            conn = sqlite3.connect('database.sql')
            cursor = conn.cursor()
            cursor.execute("UPDATE users SET balance = ? WHERE login = ?", (now_balance - 1, name))
            conn.commit()
            conn.close()
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('en')
            item2 = types.KeyboardButton('ru')
            markup.add(item1, item2)
            bot.send_message(message.chat.id, f'–í–∞—à –±–∞–ª–∞–Ω—Å: {now_balance - 1}—Ä')
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫', reply_markup=markup)
            bot.register_next_step_handler(message, poss_var)
        else:
            bot.send_message(message.chat.id, f'–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å\n –í–∞—à –±–∞–ª–∞–Ω—Å: {now_balance}—Ä')
            bot.register_next_step_handler(message, main)


    elif message.text == '–ó–∞–º–µ–Ω–∏—Ç—å —Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç–µ':
        if now_balance >= 1:
            conn = sqlite3.connect('database.sql')
            cursor = conn.cursor()
            cursor.execute("UPDATE users SET balance = ? WHERE login = ?", (now_balance - 1, name))
            conn.commit()
            conn.close()
            red = True
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è")
            item2 = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ")
            markup.add(item1, item2)
            bot.send_message(message.chat.id, f'–í–∞—à –±–∞–ª–∞–Ω—Å: {now_balance - 1}—Ä')
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ', reply_markup=markup)
            bot.register_next_step_handler(message, red_var)
        else:
            bot.send_message(message.chat.id, f'–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å\n –í–∞—à –±–∞–ª–∞–Ω—Å: {now_balance}—Ä')
            bot.register_next_step_handler(message, main)

    elif message.text == '–í–∏–∫–∏–ø–µ–¥–∏—è':
        if now_balance >= 1:
            conn = sqlite3.connect('database.sql')
            cursor = conn.cursor()
            cursor.execute("UPDATE users SET balance = ? WHERE login = ?", (now_balance - 1, name))
            conn.commit()
            conn.close()
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('–ù–∞–∑–∞–¥‚Ü™Ô∏è')
            markup.add(item1)
            bot.send_message(message.chat.id, f'–í–∞—à –±–∞–ª–∞–Ω—Å: {now_balance - 1}—Ä')
            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ç–æ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏',
                             reply_markup=markup)
            bot.register_next_step_handler(message, wiki)
        else:
            bot.send_message(message.chat.id, f'–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å\n –í–∞—à –±–∞–ª–∞–Ω—Å: {now_balance}—Ä')
            bot.register_next_step_handler(message, main)

    elif message.text == '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å':

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        now_balance = user_balance(name)
        item1 = types.KeyboardButton("5—Ä")
        item2 = types.KeyboardButton("10—Ä")
        item3 = types.KeyboardButton("20—Ä")
        item4 = types.KeyboardButton("50—Ä")
        item5 = types.KeyboardButton("–ù–∞–∑–∞–¥")
        markup.add(item1)
        markup.add(item2)
        markup.add(item3)
        markup.add(item4)
        markup.add(item5)
        bot.send_message(message.chat.id, f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å {now_balance}—Ä", reply_markup=markup)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞", reply_markup=markup)
        bot.register_next_step_handler(message, check_pay)
    elif message.text == '–ù–∞–∑–∞–¥‚Ü™Ô∏è':
        main(message)

def user_balance(name):
    conn = sqlite3.connect('database.sql')
    cursor = conn.cursor()
    cursor.execute("SELECT balance FROM users WHERE login = ?", (name,))
    result = cursor.fetchone()
    conn.close()
    print(result[0])
    return result[0]

def check_pay(message):
    global topup_balance
    if message.text == '5—Ä':
        topup_balance = 5
        bot.send_message(message.chat.id, f'–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {topup_balance} –Ω–∞ '
                                          f'\n 2200 7009 8568 2680\n –•–æ—Ö–ª–æ–≤ –ï–≤–≥–µ–Ω–∏–π –í–∞—Å–∏–ª—å–µ–≤–∏—á\n –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω'
                                          f' –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∏–¥–Ω–æ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã',
                         reply_markup=telebot.types.ReplyKeyboardRemove())
    elif message.text == '10—Ä':
        topup_balance = 10
        bot.send_message(message.chat.id, f'–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {topup_balance} –Ω–∞ '
                                          f'\n 2200 7009 8568 2680\n –•–æ—Ö–ª–æ–≤ –ï–≤–≥–µ–Ω–∏–π –í–∞—Å–∏–ª—å–µ–≤–∏—á\n –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω'
                                          f' –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∏–¥–Ω–æ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã',
                         reply_markup=telebot.types.ReplyKeyboardRemove())
    elif message.text == '20—Ä':
        topup_balance = 20
        bot.send_message(message.chat.id, f'–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {topup_balance} –Ω–∞ '
                                          f'\n 2200 7009 8568 2680\n –•–æ—Ö–ª–æ–≤ –ï–≤–≥–µ–Ω–∏–π –í–∞—Å–∏–ª—å–µ–≤–∏—á\n –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω'
                                          f' –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∏–¥–Ω–æ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã',
                         reply_markup=telebot.types.ReplyKeyboardRemove())
    elif message.text == '50—Ä':
        topup_balance = 50
        bot.send_message(message.chat.id, f'–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {topup_balance} –Ω–∞ '
                                          f'\n 2200 7009 8568 2680\n –•–æ—Ö–ª–æ–≤ –ï–≤–≥–µ–Ω–∏–π –í–∞—Å–∏–ª—å–µ–≤–∏—á\n –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω'
                                          f' –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∏–¥–Ω–æ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã',
                         reply_markup=telebot.types.ReplyKeyboardRemove())
    elif message.text == '–ù–∞–∑–∞–¥':
        possibilites(message)

@bot.callback_query_handler(func=lambda call: call.data)
def answer(call):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
    markup.add(item1)
    title, summary, url = page_wiki(call.data)
    bot.send_message(call.message.chat.id, title)
    bot.send_message(call.message.chat.id, summary)
    bot.send_message(call.message.chat.id, url, reply_markup=markup)
    bot.register_next_step_handler(call.message, edit)

def red_var(message):
    global text_file
    if message.text == '–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è':
        text_file = '–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è'
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å —Å–ª–æ–≤–æ')
        bot.register_next_step_handler(message, edit_var)
    if message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ':
        text_file = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ'
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å —Å–ª–æ–≤–æ')

def edit_var(message):
    global text, text_file, find_word, replace_word, red, all_or_one, another_amount, start_or_finish
    if red == True:
        if text_file == '–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä—É—á–Ω—É—é‚úçÔ∏è':
            if text == '':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')
                markup.add(item1)
                text = message.text
                all_texts.append(text + '\n')
                msg = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏', reply_markup=markup)
                message_id[message.chat.id] = msg.message_id
                bot.register_next_step_handler(message, edit_var)

            elif find_word == '':
                find_word = message.text
                bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å')
                bot.register_next_step_handler(message, edit_var)

            elif replace_word == "":
                replace_word = message.text
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton('–í—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è')
                item2 = types.KeyboardButton('–ü–µ—Ä–≤–æ–µ')
                item3 = types.KeyboardButton('–ü–æ—Å–ª–µ–¥–Ω–µ–µ')
                item4 = types.KeyboardButton('–î—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç')
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)
                markup.add(item4)
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω—è—Ç—å', reply_markup=markup)
                bot.register_next_step_handler(message, edit_var)
            elif all_or_one == "":
                all_or_one = message.text
                if all_or_one == '–í—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è':
                    res = replace_text(text, find_word, replace_word)
                    if res != []:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                        markup.add(item1)
                        bot.send_message(message.chat.id, res, reply_markup=markup)
                        text = ''
                        find_word = ''
                        replace_word = ''
                        all_or_one = ''
                        start_or_finish = ''
                        another_amount = ''
                        bot.register_next_step_handler(message, edit)
                    else:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                        markup.add(item1)
                        bot.send_message(message.chat.id, '–í —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞', reply_markup=markup)
                        text = ''
                        find_word = ''
                        replace_word = ''
                        all_or_one = ''
                        start_or_finish = ''
                        another_amount = ''
                        bot.register_next_step_handler(message, edit)
                elif all_or_one == '–ü–µ—Ä–≤–æ–µ':
                    res = replace_first_word(text, find_word, replace_word)
                    if res != []:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                        markup.add(item1)
                        bot.send_message(message.chat.id, res, reply_markup=markup)
                        text = ''
                        find_word = ''
                        replace_word = ''
                        all_or_one = ''
                        start_or_finish = ''
                        another_amount = ''
                        bot.register_next_step_handler(message, edit)
                    else:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                        markup.add(item1)
                        bot.send_message(message.chat.id, '–í —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞', reply_markup=markup)
                        text = ''
                        find_word = ''
                        replace_word = ''
                        all_or_one = ''
                        start_or_finish = ''
                        another_amount = ''
                        bot.register_next_step_handler(message, edit)
                elif all_or_one == '–ü–æ—Å–ª–µ–¥–Ω–µ–µ':
                    res = replace_last_word(text, find_word, replace_word)
                    if res != []:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                        markup.add(item1)
                        bot.send_message(message.chat.id, res, reply_markup=markup)
                        text = ''
                        find_word = ''
                        replace_word = ''
                        all_or_one = ''
                        start_or_finish = ''
                        another_amount = ''
                        bot.register_next_step_handler(message, edit)
                    else:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                        markup.add(item1)
                        bot.send_message(message.chat.id, '–í —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞', reply_markup=markup)
                        text = ''
                        find_word = ''
                        replace_word = ''
                        all_or_one = ''
                        start_or_finish = ''
                        another_amount = ''
                        bot.register_next_step_handler(message, edit)
                elif all_or_one == '–î—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç':
                    bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º–µ–Ω')
                    bot.register_next_step_handler(message, edit_var)
            elif another_amount == '' :
                if message.text.isdigit():
                    another_amount = int(message.text)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item1 = types.KeyboardButton('–° –Ω–∞—á–∞–ª–∞')
                    item2 = types.KeyboardButton('–° –∫–æ–Ω—Ü–∞')
                    markup.add(item1)
                    markup.add(item2)
                    bot.send_message(message.chat.id, '–û—Ç–∫—É–¥–∞ –Ω–∞—á–∏–Ω–∞—Ç—å –∑–∞–º–µ–Ω—ã', reply_markup=markup)
                    bot.register_next_step_handler(message, edit_var)
                elif message.text.isdigit() == False:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                    markup.add(item1)
                    bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ', reply_markup=markup)
                    text = ''
                    find_word = ''
                    replace_word = ''
                    all_or_one = ''
                    bot.register_next_step_handler(message, edit)
            elif start_or_finish == '':
                    start_or_finish = message.text
                    if start_or_finish == '–° –Ω–∞—á–∞–ª–∞':
                        res = replace_first_word_amount(text, find_word, replace_word, another_amount)
                        if res != []:
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                            item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                            markup.add(item1)
                            bot.send_message(message.chat.id, res, reply_markup=markup)
                            text = ''
                            find_word = ''
                            replace_word = ''
                            all_or_one = ''
                            start_or_finish = ''
                            another_amount = ''
                            bot.register_next_step_handler(message, edit)
                        else:
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                            item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                            markup.add(item1)
                            bot.send_message(message.chat.id, '–í —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞', reply_markup=markup)
                            text = ''
                            find_word = ''
                            replace_word = ''
                            all_or_one = ''
                            start_or_finish = ''
                            another_amount = ''
                            bot.register_next_step_handler(message, edit)
                    elif start_or_finish == '–° –∫–æ–Ω—Ü–∞':
                        res = replace_last_word_amount(text, find_word, replace_word, another_amount)
                        if res != []:
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                            item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                            markup.add(item1)
                            bot.send_message(message.chat.id, res, reply_markup=markup)
                            text = ''
                            find_word = ''
                            replace_word = ''
                            all_or_one = ''
                            start_or_finish = ''
                            another_amount = ''
                            bot.register_next_step_handler(message, edit)
                        else:
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                            item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                            markup.add(item1)
                            bot.send_message(message.chat.id, '–í —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞', reply_markup=markup)
                            text = ''
                            find_word = ''
                            replace_word = ''
                            all_or_one = ''
                            start_or_finish = ''
                            another_amount = ''
                            bot.register_next_step_handler(message, edit)

        if text_file == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ':
            if find_word == '':
                find_word = message.text
                bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å')
                bot.register_next_step_handler(message, edit_var)
            elif replace_word == "":
                replace_word = message.text
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton('–í—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è')
                item2 = types.KeyboardButton('–ü–µ—Ä–≤–æ–µ')
                item3 = types.KeyboardButton('–ü–æ—Å–ª–µ–¥–Ω–µ–µ')
                item4 = types.KeyboardButton('–î—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç')
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)
                markup.add(item4)
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω—è—Ç—å', reply_markup=markup)
                bot.register_next_step_handler(message, edit_var)
            elif all_or_one == "":
                all_or_one = message.text
                if all_or_one == '–í—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è':
                    res = replace_text(text, find_word, replace_word)
                    if res != []:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        item1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
                        markup.add(item1)
                        file = open('test.txt', 'w')
                        file.write(res)
                        file.close()

                        file = open('test.txt', 'r')
                        bot.send_document(message.chat.id, file, reply_markup=markup)
                        file.close()
                        text = ''
                        find_word = ''
                        replace_word = ''
                        all_or_one = ''
                        start_or_finish = ''
                        another_amount = ''
                        bot.register_next_step_handler(message, main)
                        red = False
                    else:
                        bot.send_message(message.chat.id, '–í —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞')
                        text = ''
                        find_word = ''
                        replace_word = ''
                        all_or_one = ''
                        start_or_finish = ''
                        another_amount = ''
                elif all_or_one == '–ü–µ—Ä–≤–æ–µ':
                    res = replace_first_word(text, find_word, replace_word)
                    if res != []:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        item1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
                        markup.add(item1)
                        file = open('test.txt', 'w')
                        file.write(res)
                        file.close()

                        file = open('test.txt', 'r')
                        bot.send_document(message.chat.id, file, reply_markup=markup)
                        file.close()
                        text = ''
                        find_word = ''
                        replace_word = ''
                        all_or_one = ''
                        start_or_finish = ''
                        another_amount = ''
                        bot.register_next_step_handler(message, main)
                        red = False
                    else:
                        bot.send_message(message.chat.id, '–í —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞')
                        text = ''
                        find_word = ''
                        replace_word = ''
                        all_or_one = ''
                        start_or_finish = ''
                        another_amount = ''
                elif all_or_one == '–ü–æ—Å–ª–µ–¥–Ω–µ–µ':
                    res = replace_last_word(text, find_word, replace_word)
                    if res != []:
                        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        item1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
                        markup.add(item1)
                        file = open('test.txt', 'w')
                        file.write(res)
                        file.close()

                        file = open('test.txt', 'r')
                        bot.send_document(message.chat.id, file, reply_markup=markup)
                        file.close()
                        text = ''
                        find_word = ''
                        replace_word = ''
                        all_or_one = ''
                        start_or_finish = ''
                        another_amount = ''
                        bot.register_next_step_handler(message, main)
                        red = False
                    else:
                        bot.send_message(message.chat.id, '–í —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞')
                        text = ''
                        find_word = ''
                        replace_word = ''
                        all_or_one = ''
                        start_or_finish = ''
                        another_amount = ''
                elif all_or_one == '–î—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç':
                    bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º–µ–Ω')
                    bot.register_next_step_handler(message, edit_var)
            elif another_amount == '' :
                if message.text.isdigit():
                    another_amount = int(message.text)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item1 = types.KeyboardButton('–° –Ω–∞—á–∞–ª–∞')
                    item2 = types.KeyboardButton('–° –∫–æ–Ω—Ü–∞')
                    markup.add(item1)
                    markup.add(item2)
                    bot.send_message(message.chat.id, '–û—Ç–∫—É–¥–∞ –Ω–∞—á–∏–Ω–∞—Ç—å –∑–∞–º–µ–Ω—ã', reply_markup=markup)
                    bot.register_next_step_handler(message, edit_var)
                elif message.text.isdigit() == False:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
                    markup.add(item1)
                    bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ', reply_markup=markup)
                    text = ''
                    find_word = ''
                    replace_word = ''
                    all_or_one = ''
                    bot.register_next_step_handler(message, edit)
            elif start_or_finish == '':
                    start_or_finish = message.text
                    if start_or_finish == '–° –Ω–∞—á–∞–ª–∞':
                        res = replace_first_word_amount(text, find_word, replace_word, another_amount)
                        if res != []:
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                            item1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
                            markup.add(item1)
                            file = open('test.txt', 'w')
                            file.write(res)
                            file.close()

                            file = open('test.txt', 'r')
                            bot.send_document(message.chat.id, file, reply_markup=markup)
                            file.close()
                            text = ''
                            find_word = ''
                            replace_word = ''
                            all_or_one = ''
                            start_or_finish = ''
                            another_amount = ''
                            bot.register_next_step_handler(message, main)
                            red = False
                        else:
                            bot.send_message(message.chat.id, '–í —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞')
                            text = ''
                            find_word = ''
                            replace_word = ''
                            all_or_one = ''
                            start_or_finish = ''
                            another_amount = ''
                    elif start_or_finish == '–° –∫–æ–Ω—Ü–∞':
                        res = replace_last_word_amount(text, find_word, replace_word, another_amount)
                        if res != []:
                            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                            item1 = types.KeyboardButton('–ù–∞–∑–∞–¥')
                            markup.add(item1)
                            file = open('test.txt', 'w')
                            file.write(res)
                            file.close()

                            file = open('test.txt', 'r')
                            bot.send_document(message.chat.id, file, reply_markup=markup)
                            file.close()
                            text = ''
                            find_word = ''
                            replace_word = ''
                            all_or_one = ''
                            start_or_finish = ''
                            another_amount = ''
                            bot.register_next_step_handler(message, main)
                            red = False
                        else:
                            bot.send_message(message.chat.id, '–í —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞')
                            text = ''
                            find_word = ''
                            replace_word = ''
                            all_or_one = ''
                            start_or_finish = ''
                            another_amount = ''


def poss_var(message):
    global lang
    if message.text == 'en':
        lang = 'en'
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ –≥–æ–ª–æ—Å')
        bot.register_next_step_handler(message, speech)
    if message.text == 'ru':
        lang = 'ru'
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ –≥–æ–ª–æ—Å')
        bot.register_next_step_handler(message, speech)

def speech(message):
    msg = message.text
    text_to_speech(msg, lang=lang)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")
    markup.add(item1)
    with open('text_to_speech.mp3', 'rb') as f:
        bot.send_audio(message.chat.id, f, reply_markup=markup)
        bot.register_next_step_handler(message, edit)

def wiki(message):
    if message.text != "–ù–∞–∑–∞–¥‚Ü™Ô∏è":
        text = message.text
        resualt = search_wiki(text)
        markup = types.InlineKeyboardMarkup()
        for res in resualt:
            btn = types.InlineKeyboardButton(res, callback_data=res)
            markup.add(btn)
        bot.send_message(message.chat.id, "–í–æ—Ç —á—Ç–æ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏: ", reply_markup=markup)
    else:
        possibilites(message)

@bot.message_handler(content_types=['document'])
def handle_file(message):
    global text_file
    global text
    global word
    if text_file == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ªüìÑ':
        file_id = message.document.file_id
        file_info = bot.get_file(file_id)
        file_url = f'https://api.telegram.org/file/bot{token}/{file_info.file_path}'

        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        response = requests.get(file_url)
        if response.status_code == 200:
            # –ü—Ä–æ—á–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
            file_content = response.content
            if text == '':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton('/–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')
                markup.add(item1)
                text = file_content.decode('utf-8')
                all_texts.append(text + '\n')
                if red == False:
                    bot.send_message(message.chat.id,f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏',reply_markup=markup)
                else:
                    bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å')
                    bot.register_next_step_handler(message, edit_var)


        else:
            bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª. –ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞")

@bot.message_handler(content_types=['voice'])
def get_voice(message):
    global text
    file = bot.get_file(message.voice.file_id)
    bytes = bot.download_file(file.file_path)
    with open('voice.ogg', 'wb') as f:
        f.write(bytes)
    text = speech_to_text()
    all_texts.append(text + '\n')
    bot.send_message(message.chat.id, text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏')
    bot.register_next_step_handler(message, find_voice)

def find_voice(message):
    global word
    global text
    word = message.text
    res = finder(text, word, regist, accurate_search,edit_text, all_texts, many_files)
    if res != []:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
        markup.add(item1)
        amount = len(res)
        finish_res = [str(res[i - 1]) for i in range(1, len(res) + 1)]
        bot.send_message(message.chat.id,
                         f'–í–æ—Ç —á—Ç–æ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏: \n {'\n'.join(finish_res)} \n –ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {amount}',
                         reply_markup=markup)
        text = ''
        word = ''
        bot.register_next_step_handler(message, edit)


    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
        markup.add(item1)
        bot.send_message(message.chat.id, '–í —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞', reply_markup=markup)
        text = ''
        word = ''
        bot.register_next_step_handler(message, edit)

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    global text
    global now_balance
    global topup_balance
    if topup_balance == 0:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∞–º–æ–π –±–æ–ª—å—à–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (–æ–±—ã—á–Ω–æ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ)
        file_id = message.photo[-1].file_id

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        file_info = bot.get_file(file_id)
        file_path = file_info.file_path

        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        downloaded_file = bot.download_file(file_path)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –Ω–∞ –¥–∏—Å–∫
        with open("photo.jpg", 'wb') as new_file:
            new_file.write(downloaded_file)

        bot.reply_to(message, "–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")

        text_list = text_recognition('photo.jpg')

        for i in text_list:
            text += i + ' '
        all_texts.append(text + '\n')
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏')
        bot.register_next_step_handler(message, func_text)
    else:
        file_id = message.photo[-1].file_id

        file_info = bot.get_file(file_id)
        file_path = file_info.file_path

        downloaded_file = bot.download_file(file_path)

        with open("photo.jpg", 'wb') as new_file:
            new_file.write(downloaded_file)

        text_list = text_recognition('photo.jpg')

        for i in text_list:
            text += i + ' '
        if author_name in text and str(topup_balance) in text:
            conn = sqlite3.connect('database.sql')
            cursor = conn.cursor()
            new_balance = now_balance + topup_balance
            new_balance = float(new_balance)
            cursor.execute("UPDATE users SET balance = ? WHERE login = ?", (new_balance, name))
            # –§–∏–∫—Å–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
            conn.commit()

            # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
            conn.close()
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ')
            markup.add(item1)
            now_balance = user_balance(name)
            topup_balance = 0
            bot.send_message(message.chat.id, f'–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω!\n –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {now_balance}—Ä', reply_markup=markup)
            bot.register_next_step_handler(message, edit)
        else:
            bot.send_message(message.chat.id, '–í—ã —Å–¥–µ–ª–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ')

bot.polling(non_stop=True)